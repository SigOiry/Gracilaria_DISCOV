expand = unit(2, "mm"),
radius = unit(2, "mm"),
label.fill = "grey90",
label.buffer = unit(2, "mm"))+
# geom_label(aes(x = as.numeric(ext_plot_Saja[1]*1.1) , y = as.numeric(ext_plot_Saja[4]*0.9)), label = "C")+
# geom_point(data = ciudades,
#              aes(x = lon,
#                  y = lat
#                  ), size = 5)+
# geom_text(data = ciudades,
#              aes(x = lon,
#                  y = lat+100,
#                  label = Name,
#                  group = Name
#                  ),
#           size = 5)+
theme_Bede_Map()+
labs(x="Longitude",
y="Latitude")+
scale_x_continuous(breaks = -4.01) +
scale_y_continuous(breaks = 43.415) +
# Move y-axis to the right
theme(
legend.background = element_rect(fill = alpha("white", 0)),
plot.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(vjust = 8.5,  size = 20),
axis.text.y = element_text(angle = 90, vjust = -8, hjust = 0.5, size = 20),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.box = "vertical",  # Stack legends vertically
legend.box.just = "left",  # Align the legends to the left
legend.spacing.y = unit(0.0, 'mm'),  # Adjust the spacing between items
legend.key = element_rect(fill = "white", color = "black"),  # Ensure clear legend keys
legend.box.margin = margin(5, 5, 5, 5),
panel.grid.major = ggplot2::element_line(linetype = "dotted",
colour = alpha("grey30",0.5), linewidth = 0.25)
)  # Adjust position if needed  )
)
ggsave("Paper/Figures/High_res/Figure1/Map_Saja.png",plot_Saja,width= 10, height=10, dpi = 400)
ggsave("Paper/Figures/Low_res/Figure1/Map_Saja.png",plot_Saja,width= 10, height=10, dpi = 200)
#| cache: true
#| echo: false
#| eval: false
#| warning: false
It_AB <- "Data/shp/Intertidal_sites/mask_intertidal_Aven_Belon.shp" %>%
read_sf()
Land_AB <- "Data/shp/Intertidal_sites/mask_Land_Aven_Belon.shp" %>%
read_sf()
ext_plot_AB <- st_bbox(create_square_sf(10000, c(-3.706226, 47.815149)))
Flight_AB<-data.frame(
Name=c(
"Pont du Guilly",
"Notre-Dame De Tremor"),
Long=c(-3.655220,
-3.748634) ,
Lat=c(47.822408,
47.837923)
)  %>%
st_as_sf(coords=c("Long","Lat") )  %>%
st_set_crs("EPSG:4326")  %>%
st_transform(crs(Land_Saja))  %>%
dplyr::mutate(lon = sf::st_coordinates(.) [,1],
lat = sf::st_coordinates(.) [,2]) %>%
sf::st_set_geometry(NULL) %>%
mutate(x_lab <- lon - 500)
ciudades <- data.frame(
Name=c(
"Suances",
"Cudón"),
Long=c(-4.04181,
-4.01216) ,
Lat=c(43.42575,
43.41509)
)  %>%
st_as_sf(coords=c("Long","Lat") )  %>%
st_set_crs("EPSG:4326")  %>%
st_transform(crs(Land_Saja))  %>%
dplyr::mutate(lon = sf::st_coordinates(.) [,1],
lat = sf::st_coordinates(.) [,2]) %>%
sf::st_set_geometry(NULL)
(plot_AB <- ggplot() +
geom_sf(data = Land_AB, linewidth = 0.05, alpha = 0.93, fill = "grey80") +
geom_sf(data = It_AB, linewidth = 0.05, alpha = 0.93, fill = "goldenrod") +
geom_label(aes(x = as.numeric(ext_plot_AB[1]) + (as.numeric(ext_plot_AB[3])-as.numeric(ext_plot_AB[1]))*0.9 ,
y = as.numeric(ext_plot_AB[2]) + (as.numeric(ext_plot_AB[4])-as.numeric(ext_plot_AB[2]))*0.9
, label = "A"),
size = 10,
alpha = 0.5 )+
coord_sf(
xlim = c(ext_plot_AB[1], ext_plot_AB[3]),
ylim = c(ext_plot_AB[2], ext_plot_AB[4]),
expand = F
) +
ggforce::geom_mark_ellipse(
data = Flight_AB,
aes(
x = lon,
y = lat,
label = Name,
group = Name,
),
size = 0.3,
fill = "darkred",
con.colour = "goldenrod4",
show.legend = FALSE,
label.fontsize = 15,
label.hjust = 0.5,
con.size = 1.5,
alpha = 0.8,
expand = unit(2, "mm"),
radius = unit(2, "mm"),
label.fill = "grey90",
label.buffer = unit(5, "mm"))+
# geom_point(data = ciudades,
#              aes(x = lon,
#                  y = lat
#                  ), size = 5)+
# geom_text(data = ciudades,
#              aes(x = lon,
#                  y = lat+100,
#                  label = Name,
#                  group = Name
#                  ),
#           size = 5)+
theme_Bede_Map()+
labs(x="Longitude",
y="Latitude")+
scale_x_continuous(breaks = -3.7) +
scale_y_continuous(breaks = 47.8) +
# Move y-axis to the right
theme(
legend.background = element_rect(fill = alpha("white", 0)),
plot.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(vjust = 8.5,  size = 20),
axis.text.y = element_text(angle = 90, vjust = -8, hjust = 0.5, size = 20),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.box = "vertical",  # Stack legends vertically
legend.box.just = "left",  # Align the legends to the left
legend.spacing.y = unit(0.0, 'mm'),  # Adjust the spacing between items
legend.key = element_rect(fill = "white", color = "black"),  # Ensure clear legend keys
legend.box.margin = margin(5, 5, 5, 5),
panel.grid.major = ggplot2::element_line(linetype = "dotted",
colour = alpha("grey30",0.5), linewidth = 0.25)
)  # Adjust position if needed  )
)
ggsave("Paper/Figures/High_res/Figure1/Map_AB.png",plot_AB,width= 10, height=10, dpi = 400)
ggsave("Paper/Figures/Low_res/Figure1/Map_AB.png",plot_AB,width= 10, height=10, dpi = 200)
#| cache: true
#| echo: false
#| eval: false
#| warning: false
It_Etel <- "Data/shp/Intertidal_sites/mask_intertidal_Etel.shp" %>%
read_sf()
Land_Etel <- "Data/shp/Intertidal_sites/mask_Land_Etel.shp" %>%
read_sf()
ext_plot_Etel <- st_bbox(create_square_sf(10000, c(-3.186821, 47.683477)))
Flight_Etel<-data.frame(
Name=c(
"Berringue",
"Lorois"),
Long=c(-3.194274,
-3.205714) ,
Lat=c(47.698978,
47.675159)
)  %>%
st_as_sf(coords=c("Long","Lat") )  %>%
st_set_crs("EPSG:4326")  %>%
st_transform(crs(Land_Saja))  %>%
dplyr::mutate(lon = sf::st_coordinates(.) [,1],
lat = sf::st_coordinates(.) [,2]) %>%
sf::st_set_geometry(NULL) %>%
mutate(x_lab <- lon - 500)
ciudades <- data.frame(
Name=c(
"Suances",
"Cudón"),
Long=c(-4.04181,
-4.01216) ,
Lat=c(43.42575,
43.41509)
)  %>%
st_as_sf(coords=c("Long","Lat") )  %>%
st_set_crs("EPSG:4326")  %>%
st_transform(crs(Land_Saja))  %>%
dplyr::mutate(lon = sf::st_coordinates(.) [,1],
lat = sf::st_coordinates(.) [,2]) %>%
sf::st_set_geometry(NULL)
(plot_Etel <- ggplot() +
geom_sf(data = Land_Etel, linewidth = 0.05, alpha = 0.93, fill = "grey80") +
geom_sf(data = It_Etel, linewidth = 0.05, alpha = 0.93, fill = "goldenrod") +
geom_label(aes(x = as.numeric(ext_plot_Etel[1]) + (as.numeric(ext_plot_Etel[3])-as.numeric(ext_plot_Etel[1]))*0.9 ,
y = as.numeric(ext_plot_Etel[2]) + (as.numeric(ext_plot_Etel[4])-as.numeric(ext_plot_Etel[2]))*0.9
, label = "B"),
size = 10,
alpha = 0.5 )+
coord_sf(
xlim = c(ext_plot_Etel[1], ext_plot_Etel[3]),
ylim = c(ext_plot_Etel[2], ext_plot_Etel[4]),
# ndiscr = 1,
expand = FALSE
) +
scale_x_continuous(breaks = -3.2) +
scale_y_continuous(breaks = 47.68) +
ggforce::geom_mark_ellipse(
data = Flight_Etel,
aes(
x = lon,
y = lat,
label = Name,
group = Name
),
size = 0.3,
fill = "darkred",
con.colour = "goldenrod4",
show.legend = FALSE,
label.fontsize = 15,
label.hjust = 0.5,
con.size = 1.5,
alpha = 0.8,
expand = unit(2, "mm"),
radius = unit(2, "mm"),
label.fill = "grey90",
label.buffer = unit(5, "mm")
) +
theme_Bede_Map() +
labs(x = "Longitude", y = "Latitude")+
# scale_x_continuous(breaks = seq(floor(ext_plot_Etel[1]), ceiling(ext_plot_Etel[3]), by = 500)) +
# scale_y_continuous(breaks = seq(floor(ext_plot_Etel[2]), ceiling(ext_plot_Etel[4]), by = 500)) +
theme(
legend.background = element_rect(fill = alpha("white", 0)),
plot.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(vjust = 8.5,  size = 20),
axis.text.y = element_text(angle = 90, vjust = -8, hjust = 0.5, size = 20),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.box = "vertical",
legend.box.just = "left",
legend.spacing.y = unit(0.0, 'mm'),
legend.key = element_rect(fill = "white", color = "black"),
legend.box.margin = margin(5, 5, 5, 5),
panel.grid.major = element_line(
linetype = "dotted",
colour = alpha("grey30", 0.5),
linewidth = 0.25
)
)
)
ggsave("Paper/Figures/High_res/Figure1/Map_Etel.png",plot_AB,width= 10, height=10, dpi = 400)
ggsave("Paper/Figures/Low_res/Figure1/Map_Etel.png",plot_AB,width= 10, height=10, dpi = 200)
#| cache: true
#| echo: false
#| eval: false
#| warning: false
(final_map <- ((p1 | plot_AB) / (plot_Etel | plot_Saja))  +
plot_layout(guides = "collect")&
theme_void()&
theme(legend.position = "bottom",
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "cm"),
axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text.x = element_text(size = 20, vjust = 8.5, hjust = 0.8),
axis.text.y = element_text(size = 20, vjust = -8, hjust = 0, angle = 90),
panel.border = element_rect(color = "black", fill = NA),
panel.background = element_rect(fill = "white"),  # Re-enable panel background
plot.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "transparent"),
panel.grid.major = element_line(color = "black", linetype = "dashed", linewidth = 0.5),
panel.grid.minor = element_line(color = "grey", linetype = "dotted", linewidth = 0.25)))
ggsave("Paper/Figures/High_res/Figure1/Map_site.png",final_map,width= 10, height=10, dpi = 400)
ggsave("Paper/Figures/Low_res/Figure1/Map_site.png",final_map,width= 10, height=10, dpi = 200)
shp <- read_sf("Data/Shiny_Validation/shp_all_validation.shp")
library(tidyverse)
library(sf)
library(terra)
shp <- read_sf("Data/Shiny_Validation/shp_all_validation.shp")
shp <- read_sf("Data/Shiny_Validation/shp_all_validation.shp")
img_list <- "Data/DISCOV" %>%
list.files(pattern = ".tif", full.names = T)
img_list <- "Data/DISCOV" %>%
list.files(pattern = ".tif", full.names = T) %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(filename = gsub(".*/","",path))
View(img_list)
shp
img_list <- "Data/DISCOV" %>%
list.files(pattern = ".tif", full.names = T) %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(filename = gsub(".*/","",path),
site = case_when(str_detect("Aven",filename) ~ "Aven",
str_detect("Belon",filename) ~ "Belon",
str_detect("North",filename) ~ "SajaNorth",
str_detect("South",filename) ~ "SajaSouth"))
img_list <- "Data/DISCOV" %>%
list.files(pattern = ".tif", full.names = T) %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(filename = gsub(".*/","",path),
site = case_when(str_detect(filename,"Aven") ~ "Aven",
str_detect(filename,"Belon") ~ "Belon",
str_detect(filename,"North") ~ "SajaNorth",
str_detect(filename,"South") ~ "SajaSouth"))
img_list
shp <- read_sf("Data/Shiny_Validation/shp_all_validation.shp") %>%
mutate(site = sapply(strsplit(path, "_"), function(x) x[1]))
shp
shp <- read_sf("Data/Shiny_Validation/shp_all_validation.shp") %>%
mutate(site = sapply(strsplit(snapshot, "_"), function(x) x[1]))
shp
i=1
img <- rast(img_list$path[i])
img
plot(img)
img <- rast(img_list$path[i]) %>%
as.factor()
plot(img_list)
plot(img)
shp_i <- shp %>%
dplyr::filter(site = unique(img_list$site)[i])
shp_i <- shp %>%
dplyr::filter(site == unique(img_list$site)[i])
shp_i
img
shp_i <- shp %>%
dplyr::filter(site == unique(img_list$site)[i]) %>%
rasterize(img)
names(img) = "pred"
names(shp_i) = "true"
stk <- c(img,shp_i)
stk <- c(img,shp_i) %>%
as.data.frame(xy = T) %>%
dplyr::filter(!is.na(pred))
stk <- c(img,shp_i) %>%
as.data.frame(xy = T) %>%
dplyr::filter(!is.na(true))
shp
shp_i <- shp %>%
dplyr::filter(site == unique(img_list$site)[i]) %>%
mutate(Truth = case_when(Vegetation == "Red algae" ~ 1,
T ~ 0))
shp_i
rasterize(img, field = "Truth")
shp_i <- shp %>%
dplyr::filter(site == unique(img_list$site)[i]) %>%
mutate(Truth = case_when(Vegetation == "Red algae" ~ 1,
T ~ 0)) %>%
rasterize(img, field = "Truth")
names(shp_i) = "true"
stk <- c(img,shp_i) %>%
as.data.frame(xy = T) %>%
dplyr::filter(!is.na(true))
img <- rast(img_list$path[i])
# as.factor()
names(img) = "pred"
shp_i <- shp %>%
dplyr::filter(site == unique(img_list$site)[i]) %>%
mutate(Truth = case_when(Vegetation == "Red algae" ~ 1,
T ~ 0)) %>%
rasterize(img, field = "Truth")
names(shp_i) = "true"
stk <- c(img,shp_i) %>%
as.data.frame(xy = T) %>%
dplyr::filter(!is.na(true)) %>%
mutate(pred = case_when(pred == 5 ~ 1,
T ~ 0))
stk <- c(img,shp_i) %>%
as.data.frame(xy = T) %>%
dplyr::filter(!is.na(true)) %>%
mutate(pred = case_when(pred == 5 ~ 1,
T ~ 0),
site = unique(img_list$site)[i])
for (i in 1:nrow(img_list)) {
img <- rast(img_list$path[i])
# as.factor()
names(img) = "pred"
shp_i <- shp %>%
dplyr::filter(site == unique(img_list$site)[i]) %>%
mutate(Truth = case_when(Vegetation == "Red algae" ~ 1,
T ~ 0)) %>%
rasterize(img, field = "Truth")
names(shp_i) = "true"
stk <- c(img,shp_i) %>%
as.data.frame(xy = T) %>%
dplyr::filter(!is.na(true)) %>%
mutate(pred = case_when(pred == 5 ~ 1,
T ~ 0),
site = unique(img_list$site)[i])
if (i==1){
validation_df <- stk
}else{
validation_df <- rbind(validation_df,stk)
}
}
library(caret)
confusionMatrix(validation_df$pred,validation_df$true)
confusionMatrix(as.factor(validation_df$pred),as.factor(validation_df$true))
shp <- read_sf("Data/Shiny_Validation/shp_all_validation.shp") %>%
mutate(site = sapply(strsplit(snapshot, "_"), function(x) x[1]))
img_list <- "Data/DISCOV" %>%
list.files(pattern = ".tif", full.names = T) %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(filename = gsub(".*/","",path),
site = case_when(str_detect(filename,"Aven") ~ "Aven",
str_detect(filename,"Belon") ~ "Belon",
str_detect(filename,"North") ~ "SajaNorth",
str_detect(filename,"South") ~ "SajaSouth"))
shp <- read_sf("Data/Shiny_Validation/shp_all_validation.shp") %>%
mutate(site = sapply(strsplit(snapshot, "_"), function(x) x[1]))
"Data/DISCOV" %>%
list.files(pattern = ".tif", full.names = T)
img_list <- "Data/DISCOV" %>%
list.files(pattern = ".tif", full.names = T) %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(filename = gsub(".*/","",path),
site = case_when(str_detect(filename,"Aven") ~ "Aven",
str_detect(filename,"Belon") ~ "Belon",
str_detect(filename,"North") ~ "SajaNorth",
str_detect(filename,"South") ~ "SajaSouth"))
"Data/DISCOV" %>%
list.files(pattern = ".tif", full.names = T) %>%
as_tibble()
"Data/DISCOV" %>%
list.files(pattern = ".tif", full.names = T) %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(filename = gsub(".*/","",path),
site = case_when(str_detect(filename,"Aven") ~ "Aven",
str_detect(filename,"Belon") ~ "Belon",
str_detect(filename,"North") ~ "SajaNorth",
str_detect(filename,"South") ~ "SajaSouth"))
img_list <- "Data/DISCOV" %>%
list.files(pattern = ".tif", full.names = T) %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(filename = gsub(".*/","",path),
site = case_when(str_detect(filename,"Aven") ~ "Aven",
str_detect(filename,"Belon") ~ "Belon",
str_detect(filename,"North") ~ "SajaNorth",
str_detect(filename,"South") ~ "SajaSouth"))
img_list1 <- "Data/DISCOV" %>%
list.files(pattern = ".tif", full.names = T) %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(filename = gsub(".*/","",path),
site = case_when(str_detect(filename,"Aven") ~ "Aven",
str_detect(filename,"Belon") ~ "Belon",
str_detect(filename,"North") ~ "SajaNorth",
str_detect(filename,"South") ~ "SajaSouth"))
img_list <- "Data/DISCOV" %>%
list.files(pattern = ".tif", full.names = T) %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(filename = gsub(".*/","",path),
site = case_when(str_detect(filename,"Aven") ~ "Aven",
str_detect(filename,"Belon") ~ "Belon",
str_detect(filename,"North") ~ "SajaNorth",
str_detect(filename,"South") ~ "SajaSouth"))
img_list <- "Data/DISCOV" %>%
list.files(pattern = ".tif", full.names = T) %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(filename = gsub(".*/","",path),
site = case_when(str_detect(filename,"Aven") ~ "Aven",
str_detect(filename,"Belon") ~ "Belon",
str_detect(filename,"North") ~ "SajaNorth",
str_detect(filename,"South") ~ "SajaSouth"))
img_list <- "Data/DISCOV" %>%
list.files(pattern = ".tif", full.names = T) %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(filename = gsub(".*/","",path),
site = case_when(str_detect(filename,"Aven") ~ "Aven",
str_detect(filename,"Belon") ~ "Belon",
str_detect(filename,"North") ~ "SajaNorth",
str_detect(filename,"South") ~ "SajaSouth"))
for (i in 1:nrow(img_list)) {
img <- rast(img_list$path[i])
# as.factor()
names(img) = "pred"
shp_i <- shp %>%
dplyr::filter(site == unique(img_list$site)[i]) %>%
mutate(Truth = case_when(Vegetation == "Red algae" ~ 1,
T ~ 0)) %>%
rasterize(img, field = "Truth")
names(shp_i) = "true"
stk <- c(img,shp_i) %>%
as.data.frame(xy = T) %>%
dplyr::filter(!is.na(true)) %>%
mutate(pred = case_when(pred == 5 ~ 1,
T ~ 0),
site = unique(img_list$site)[i])
if (i==1){
validation_df <- stk
}else{
validation_df <- rbind(validation_df,stk)
}
}
shp <- read_sf("Data/Shiny_Validation/shp_all_validation.shp") %>%
mutate(site = sapply(strsplit(snapshot, "_"), function(x) x[1]))
img_list <- "Data/DISCOV" %>%
list.files(pattern = ".tif", full.names = T) %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(filename = gsub(".*/","",path),
site = case_when(str_detect(filename,"Aven") ~ "Aven",
str_detect(filename,"Belon") ~ "Belon",
str_detect(filename,"North") ~ "SajaNorth",
str_detect(filename,"South") ~ "SajaSouth"))
